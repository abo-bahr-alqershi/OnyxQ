---
description: 
globs: 
alwaysApply: false
---
# القواعد الصارمة لتطوير مشروع ERP_Pro

## التحليل والاعتماد على الوثائق

2. يجب تحليل شاشات نظام الأونكس برو المحاسبي بشكل كامل ودقيق دون تجاهل أي تفاصيل.

4. يجب أن تكون جميع القرارات التصميمية والتنفيذية متوافقة مع المعمارية الخاصة بنا.

5. في حالة وجود تعارض بين متطلبات جديدة والمعماريات الموجودة، يجب مراجعة المعمارية وتحديثها بالتنسيق مع فريق المعمارية قبل المضي في التنفيذ.

6. يمنع منعاً باتاً تجاوز أو تجاهل أي من المعايير والضوابط الموضحة في هذه المعماريات.

## سلامة قاعدة البيانات وتكامل النموذج

7. **من الضروري والإلزامي بشكل قطعي** تطوير قاعدة بيانات متكاملة وقوية ومنظمة من خلال:
   - تصميم العلاقات بين الموديلات بعناية فائقة وتوثيقها بشكل دقيق
   - التأكد من أن العلاقات تعكس بدقة العلاقات الحقيقية في النظام
   - الحرص الشديد على تنفيذ قيود السلامة المرجعية (Foreign Key Constraints)
   - مراجعة العلاقات بشكل دوري للتأكد من سلامتها واكتمالها

8. **يمنع منعاً باتاً وبشكل قطعي** تكرار البيانات أو الموديلات بأي شكل من الأشكال:
   - كل كيان في النظام يجب أن يكون له موديل واحد فقط
   - يجب إعادة استخدام الموديلات الموجودة بدلاً من إنشاء موديلات جديدة مشابهة
   - يجب تجنب نسخ البيانات بين الموديلات واستخدام العلاقات بدلاً من ذلك

9. **من الضروري بشكل إلزامي** توثيق جميع العلاقات بين الموديلات بشكل واضح:
   - تحديد نوع العلاقة (one-to-one, one-to-many, many-to-many)
   - تحديد إلزامية العلاقة (required or optional)
   - توثيق قواعد حذف وتحديث العلاقات (cascade, restrict, set null)

10. **يجب الالتزام بشكل صارم** بتنفيذ التصميم الموحد لقاعدة البيانات:
    - اتباع نفس الأنماط والتقاليد في تسمية الجداول والأعمدة والعلاقات
    - الحفاظ على اتساق أنواع البيانات للحقول المتشابهة عبر مختلف الموديلات
    - تطبيق نفس قواعد السلامة والتحقق عبر جميع الموديلات المتشابهة

11. **عند كل تطوير للشاشات** يجب التأكد من أن الموديلات والعلاقات تدعم بشكل كامل متطلبات الشاشة:
    - مراجعة الموديلات الحالية قبل إنشاء موديلات جديدة
    - تعديل الموديلات الحالية وإضافة خصائص جديدة إليها بدلاً من إنشاء موديلات جديدة
    - التأكد من أن العلاقات بين الموديلات تدعم سير العمل في الشاشة

## التكامل مع باقي أجزاء المشروع والعلاقات بين الموديلات

12. **يجب مراعاة جوانب التكامل مع باقي أجزاء المشروع بشكل صارم في كل مرحلة من مراحل التطوير، وأي إخلال بذلك يعتبر خطأ جسيم**:
    - التأكد من أن كل تطوير جديد لا يؤثر سلبًا على التكامل بين الوحدات المختلفة.
    - مراجعة ارتباط الموديلات الجديدة مع الخدمات، الأحداث، والعمليات الموجودة مسبقًا.
    - أي علاقة أو خاصية جديدة يجب أن يتم تحليل تأثيرها على التكامل العام للنظام.

13. **مراعاة العلاقات بين الموديلات الجديدة والموديلات السابقة بشكل إلزامي وصارم:**
    - تحليل جميع العلاقات الممكنة بين الموديلات الجديدة والموديلات الحالية قبل البدء بالتنفيذ.
    - توثيق كل علاقة جديدة بوضوح، وتحديث ملفات العلاقات والمخططات فورًا.
    - يمنع إحداث أي علاقة جديدة أو تعديل علاقة قائمة دون مراجعة أثرها على النظام ككل.

14. يجب تحديد العلاقات بين الموديلات الجديدة والموديلات السابقة قبل البدء بالتنفيذ.

15. يجب مراعاة العلاقات الموجودة مسبقاً بين الموديلات وعدم الإخلال بها.

16. يُسمح بإضافة خصائص جديدة للموديلات الموجودة عند الحاجة وبما لا يؤثر على تكاملها.

17. يُمنع منعاً باتاً إنشاء موديل موجود مسبقاً حتى لو كان بتسمية مختلفة.

## تقسيم المشروع وتسمية الوحدات

18. يجب الالتزام بتقسيم وتسمية وحدات النظام بشكل موحد في جميع طبقات المشروع، باستخدام التسميات التالية حصراً:
    - `Activities` - الأنشطة
    - `ArchivingDocuments` - أرشفة المستندات
    - `ArticlesContent` - المقالات والمحتوى
    - `Attendance` - الحضور
    - `CoreSystem` - النظام الأساسي
    - `DoctorsPatients` - الأطباء والمرضى
    - `FixedAssets` - الأصول الثابتة
    - `FinanceAccounting` - المالية والمحاسبة
    - `FormsSurveys` - النماذج والاستبيانات
    - `GeneralLedger` - دفتر الأستاذ العام
    - `GuaranteesWarranties` - الضمانات والكفالات
    - `HumanResources` - الموارد البشرية
    - `InsuranceClaims` - مطالبات التأمين
    - `InventoryWarehousing` - المخزون والمستودعات
    - `JudicialLegal` - القضائي والقانوني
    - `ProductionManufacturing` - الإنتاج والتصنيع
    - `MessagesNotifications` - الرسائل والإشعارات
    - `ProjectsRegions` - المشاريع والمناطق
    - `PurchasingVendors` - المشتريات والموردين
    - `ReplicationDuplication` - النسخ والتكرار
    - `SalesCustomers` - المبيعات والعملاء
    - `SettingsParameters` - الإعدادات والمعاملات
    - `ServicesMaintenance` - الخدمات والصيانة
    - `TaxFees` - الضرائب والرسوم
    - `StationsFuel` - المحطات والوقود
    - `TemporaryTables` - الجداول المؤقتة
    - `TransportationShipping` - النقل والشحن
    - `TrackingMonitoring` - التتبع والمراقبة
    - `UsersPermissions` - المستخدمين والصلاحيات
    - `WebServicesInterfaces` - واجهات الويب والخدمات

19. يجب استخدام هذه التسميات بشكل متسق عبر جميع طبقات النظام:
    - في وحدات النطاق (Modules) في طبقة Domain
    - في خصائص التطبيق (Features) في طبقة Application
    - في المستودعات (Repositories) في طبقة Infrastructure
    - في وحدات التحكم (Controllers) في طبقة Server
    - في أي تقسيمات أخرى تتطلب تجميع الوظائف حسب مجالات الأعمال

## التوثيق والهيكلة

20. قبل إنشاء أي ملفات أو موديلات، يجب توثيق الهيكل المزمع إنشاؤه في ملفات المخططات المناسبة.

21. يجب أن يتضمن التوثيق شرحاً واضحاً لكل ملف ومجلد وموديل والغرض منه وعلاقته بباقي مكونات المشروع.

22. يجب الحفاظ على تناسق وترابط أجزاء المشروع في جميع الطبقات.

## تحديث المخططات

23. عند إضافة أي مكون جديد، يجب تحديث ملف المخطط المناسب فوراً.

24. يجب أن تعكس ملفات المخططات دائماً الحالة الحالية للمشروع.

## مبادئ عامة

25. يجب الالتزام بمبادئ التصميم المعتمدة في المشروع (DDD, Clean Architecture).

26. يجب مراعاة الفصل بين المسؤوليات في الطبقات المختلفة.

27. يجب تجنب التكرار في الكود والموديلات.

28. يجب الحفاظ على تناسق التسميات والأنماط في المشروع.
