# Database Relationship Analysis Summary

## Key Statistics
- Total tables: 876
- Tables with primary keys: 597 (68.15%)
- Tables with foreign keys: 485 (55.37%)
- Total foreign key relationships: 1265
- Average foreign keys per table: 1.44
- Isolated tables (no relationships): 231 (26.37%)

## Core Tables (Most Referenced)
1. IAS_ACTVTY: 113 references - Central activity tracking
2. COST_CENTERS: 96 references - Cost center management
3. IAS_PROJECTS: 80 references - Project management
4. WAREHOUSE_DETAILS: 79 references - Warehouse information
5. ACCOUNT: 62 references - Account information
6. ACCOUNT_CURR: 57 references - Account currency details
7. IAS_ITM_DTL: 52 references - Item details
8. IAS_ITM_MST: 48 references - Item master records
9. USER_R: 44 references - User records
10. CUSTOMER: 43 references - Customer information

## Tables with Most Foreign Keys
1. IAS_CONN_ACC_INV_BY_GL: 14 foreign keys
2. IAS_BILL_MST: 12 foreign keys
3. CUSTOMER: 11 foreign keys
4. DETAIL_JOURNAL_V, IAS_RT_BILL_MST, IAS_RT_BILL_MST_RQ, INTERFACE_ACC: 10 foreign keys each

## Strong Relationships (Multiple Foreign Keys to Same Table)
1. IAS_CONN_ACC_INV_BY_GL -> ACCOUNT: 14 foreign keys
2. INTERFACE_ACC -> ACCOUNT: 9 foreign keys
3. Multiple tables have 2 foreign keys to the same reference table

## Potential Circular References
- IAS_MACHINES <--> IAS_MACHINES
- SALES_MAN <--> SALES_MAN
- S_EMP <--> S_EMP

## Database Design Observations
1. High number of isolated tables (26.37%) suggests either:
   - Utility/lookup tables that don't need relationships
   - Potentially legacy or unused tables
   - Tables that use non-foreign key relationships

2. The core entities (IAS_ACTVTY, COST_CENTERS, IAS_PROJECTS) are heavily referenced,
   indicating their central role in business processes.

3. Financial and inventory management appear to be key aspects of the system based on
   the most referenced tables (ACCOUNT, WAREHOUSE_DETAILS, etc.).

4. The presence of circular references suggests potential complexity in the data model
   that might need review.

5. Relationship distribution shows most tables have 1-2 foreign keys (325 tables),
   with few highly complex tables (only 6 tables have more than 10 foreign keys). 